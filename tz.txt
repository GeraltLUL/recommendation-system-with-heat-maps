1.	ОБЩИЕ СВЕДЕНИЯ
1.1.	 Наименование программного продукта
Полное наименование: «GameFlow: Система анализа игровых данных для оптимизации геймдизайна»
Сокращенное наименование: «GameFlow Analytics»
1.2.	 Исполнитель
Студент гр. КТбо4-8 Федоров А.В.
1.3.	 Основание для разработки
Основанием для разработки системы является задание на производствен-ную практику студенту группы КТбо4-8 Федорову Александру Владимировичу, утвержденное руководителем практики от профильной организации ООО «Ра-бота моей мечты» Целых А.А. и руководителем от Университета старшим пре-подавателем кафедры МОП ЭВМ Жиглатым А.А.
1.4.	 Сроки проведения работ
Начало работы	– «08» февраля 2025 г.
Окончание работы – «04» июня 2025 г.
1.5.	 Порядок оформления и предъявления результатов
Результаты разработки оформляются в виде:
•	Исходного кода программного продукта, размещенного в репозито-рии Git.
•	Функционирующего прототипа программного продукта.
•	Отчета о прохождении производственной практики, включающего пояснительную записку к разработанному программному продукту.
1.6.	 Перечень нормативно-технических документов, методических мате-риалов, использованных при разработке ТЗ
•	ГОСТ 34.003-90 Информационная технология. Комплекс стандартов на автоматизированные системы. Термины и определения.
•	ГОСТ 34.201-89. Информационная технология. Комплекс стандартов на автоматизированные системы. Виды, комплексность и обозначение документов при создании автоматизированных систем;
•	ГОСТ 34.601-90. Комплекс стандартов на автоматизированные си-стемы. Автоматизированные системы. Стадии создания;
•	ГОСТ 34.602-89 Информационная технология. Комплекс стандартов на автоматизированные системы. Техническое задание на создание автоматизированной системы.
•	РД 50-34.698-90. Методические указания. Информационная техноло-гия. Комплекс стандартов на автоматизированные системы. Автома-тизированные системы.

2.	НАЗНАЧЕНИЕ И ЦЕЛИ СОЗДАНИЯ ПО
2.1.	 Назначение системы
Система «GameFlow Analytics» предназначена для комплексного анализа игровых данных и оптимизации игрового процесса. Она автоматизирует обра-ботку информации об активности пользователей, что позволяет выявлять зако-номерности в поведении игроков и оптимизировать игровые механики для улучшения пользовательского опыта и повышения удержания аудитории. Кро-ме того, система формирует детализированные отчёты и визуализирует данные с помощью интерактивных графиков, предоставляя аналитикам удобный интер-фейс для быстрого доступа к информации и проведения глубокого анализа.
2.2.	 Цели создания системы
Цель создания системы «GameFlow Analytics» заключается в формировании комплексного инструмента, который позволит принимать обоснованные реше-ния в игровой индустрии на основе анализа данных. Система создается для об-работки и визуализации информации о поведении пользователей, что дает воз-можность:
•	Оптимизировать игровые механики, повышая вовлеченность и удержание аудитории, путем использования данных об активности пользователей.
•	Обеспечить аналитиков детальной информацией для принятия стратегиче-ски важных решений, что способствует улучшению пользовательского опыта и адаптации контента под потребности аудитории.
•	Повысить коммерческую эффективность проекта за счет оптимизации мо-нетизации и предоставления персонализированных рекомендаций для иг-роков.
3.	ХАРАКТЕРИСТИКА ОБЪЕКТА АВТОМАТИЗАЦИИ
3.1.	 Объект автоматизации
Объектом автоматизации является процесс обработки и анализа игровых данных, характеризующих поведение пользователей в многопользовательских онлайн-играх. Автоматизируемая деятельность охватывает мониторинг ключе-вых метрик игрового процесса, отслеживание активности игроков, фиксацию внутриигровых событий. Разрабатываемая система обеспечивает интеграцию с игровыми клиентами, осуществляя автоматизированный анализ данных в режи-ме реального времени, их предварительную валидацию, хранение и последую-щую визуализацию с целью предоставления аналитической информации разра-ботчикам.
4.	ТРЕБОВАНИЯ К ПО
4.1.	 Требования к ПО в целом 
Программное обеспечение «GameFlow Analytics» должно обеспечивать об-работку, анализ и визуализацию данных, получаемых из игрового приложения, разработанного на базе Unity. Система имеет клиент-серверную архитектуру, должно реализовывать интеграцию с игровой средой посредством API, что поз-воляет в реальном времени получать информацию об активности пользователей и внутриигровых событиях. В состав системы входит два основных компонента:
•	Основная система анализа, отвечающая за автоматизированную обра-ботку и кластеризацию данных, прогнозирование поведения игроков, формирование аналитических отчетов и предоставление рекомендаций для оптимизации игровых механик.
•	Демонстратор работы системы – небольшое приложение, предназна-ченное для наглядного отображения функционирования основной си-стемы. Демонстратор демонстрирует процесс интеграции с игровым приложением на Unity, передачу данных через API, а также визуализа-цию и анализ полученной информации посредством интерактивных гра-фиков и отчетов.
4.2.	 Функциональные требования
•	Регистрация и авторизация: авторизация должна осуществляться через веб-интерфейс с проверкой введенных данных. Пароли должны хра-ниться в зашифрованном виде с использованием хеширования. При успешной авторизации пользователю предоставляется сессионный токен с ограниченным сроком действия.
•	Обработка и анализ: автоматическая валидация и сохранение получен-ных данных в базу, применение алгоритмов кластеризации для группи-ровки пользователей по паттернам поведения, выявление непопулярных зон через построение тепловых карт.
•	Формирование рекомендаций и отчётов: автоматическая генерация аналитических отчётов, Визуализация данных через веб-интерфейс, Формирование персонализированных рекомендаций для оптимизации игровых уровней.
•	Интерфейсы: веб-интерфейс для аналитиков и разработчиков с воз-можностью фильтрации данных, REST API для интеграции с внешними системами.
•	Ролевая модель: 
• Гость (неавторизованный пользователь): имеет доступ к авторотацион-ному окну.
• Аналитик: может осуществлять авторизацию через веб-интерфейс с ис-пользованием защищенных учетных данных. Имеет доступ к просмотру всех аналитических отчетов, информации о сессиях и игровом процессе, включая детализированную аналитику игровых уровней. Не обладает правами регистрации новых пользователей или назначения ролей.
• Администратор: помимо функционала аналитика, имеет расширенные права доступа, позволяющие управлять системой. Может регистриро-вать новых пользователей, назначать им роль аналитика и контролиро-вать процесс авторизации.



4.3.	 Нефункциональное тестирование
•	Производительность: генерация аналитических отчетов и их визуали-зация не должны занимать более 30 секунд. Обеспечение быстродей-ствия системы при одновременной работе большого числа пользовате-лей и высоких объёмах поступающих данных.
•	Надёжность: гарантированная доступность системы не менее 99% вре-мени посредством использования отказоустойчивых решений, резервно-го копирования и системы мониторинга. Обеспечение корректной рабо-ты всех модулей при наличии потенциальных сбоев или перегрузок.
•	Безопасность: реализация шифрования данных при хранении, что поз-воляет защитить информацию от несанкционированного доступа. Сбор анонимизированных данных в полном соответствии с нормативными требованиями и стандартами информационной безопасности.
•	Масштабируемость: обеспечение возможности горизонтального мас-штабирования серверного оборудования и базы данных для поддержки роста числа пользователей и увеличения объёма обрабатываемых дан-ных. 
•	Совместимость и интеграция: гарантированная совместимость с со-временными операционными системами, веб-браузерами. Предусмотре-на возможность интеграции с внешними сервисами и библиотеками, что позволяет расширять функциональность системы и легко адаптировать-ся к новым требованиям.
•	Удобство использования: интуитивно понятный и адаптивный веб-интерфейс для аналитиков и разработчиков, позволяющий эффективно осуществлять мониторинг и анализ данных. Наличие подробной доку-ментации и инструкций для пользователей и технического персонала, обеспечивающих быстрое освоение всех функциональных возможностей системы.
4.4.	 Требования к видам обеспечения
•	Аппаратное обеспечение: серверное оборудование, способное обеспе-чить обработку большого объёма данных в реальном времени (с под-держкой горизонтального масштабирования).
•	Программное обеспечение: операционные системы и серверное ПО, обеспечивающее работу Flask, PostgreSQL, Redis. Игровой движок Unity для клиентской части. Современные библиотеки для визуализации дан-ных.
4.5.	 Требования к виду и объемам работ по тестированию
•	UNIT-тестирование
• Проверка модулей и функций на корректность работы в изолирован-ной среде.
• Обеспечение соответствия реализации функциональных требований, указанных в разделе 4.2.
• Разработка и автоматизация тест-кейсов для каждого значимого функ-ционального блока.
• Использование специализированных средств UNIT-тестирования.
• Проверка выполнения всех заявленных функций системы в соответ-ствии с техническими требованиями (обработка, анализ, визуализация и формирование рекомендаций).
•	Интеграционное тестирование
• Проверка корректности взаимодействия между компонентами системы.
• Проверка обработки данных по REST API.
•	Нагрузочное тестирование
• Определение устойчивости системы при повышенной нагрузке, обес-печивающей обработку генерацию отчетов — не более 30 секунд.
• Моделирование реальных сценариев использования, оценка произво-дительности, а также выявление узких мест в масштабируемости систе-мы.
•	Удобство использования
• Контроль за стабильностью системы после внедрения изменений, но-вых функциональных возможностей или исправления выявленных де-фектов.
• Повторное прохождение ранее разработанных тест-кейсов для под-тверждения отсутствия побочных эффектов и сохранения корректности работы всех модулей.
•	Тестирование ролевого доступа
Проверка корректной работы механизма разграничения прав доступа: гость (неавторизованный пользователь) должен иметь доступ только к авторотационному окну. Аналитик, в отличие от администратора, дол-жен иметь возможность просматривать данные и отчеты, но не иметь возможности регистрировать новых пользователей или назначать роль аналитика. Администратор должен иметь возможность просматривать всю аналитическую информацию по сессиям и уровням, а также реги-стрировать новых пользователей с ролью аналитик. Проверка правиль-ности работы функционала управления ролями, включая тестирование перехода между ролями и обеспечение соблюдения ограничений досту-па.
5.	СОСТАВ И СОДЕРЖАНИЕ РАБОТ
5.1.	 Подготовительный этап
•	Согласование задания на производственную практику с руководителем практики от университета.
•	Оформление технического задания и утверждение основных требований к ПО.
•	Организация материально-технического обеспечения, формирование ра-бочей группы.
5.2.	 Этап разработки и контроля промежуточных результатов
•	Реализация ключевых модулей системы: серверная часть, аналитический модуль (кластеризация и генерация отчетов) и веб-интерфейс для визуа-лизации данных.
•	Проведение тестирования (UNIT-тестирование, интеграционное тестиро-вание, тестирование безопасности) для обеспечения соответствия техниче-ским требованиям.
5.3.	 Заключительный этап
•	Завершение разработки всех модулей системы, проведение комплексных тестов и проверка функционирования системы в интегрированном режи-ме.
•	Подготовка эксплуатационной и методической документации, а также от-четных документов по результатам производственной практики.
•	Подготовка и проведение защиты проекта, оформление итоговых доку-ментов и сбор подписей.
Календарный план приводится в Приложение 1.
6.	ПОРЯДОК КОНТРОЛЯ И ПРИЕМКИ
Предполагается проведение внутренних испытаний силами Исполнителя, проведение приемо-сдаточных испытаний перед комиссией. Результаты приёмки оформляются протоколом испытаний.
7.	ТРЕБОВАНИЯ К СОСТАВУ И СОДЕРЖАНИЮ ПОДГОТОВКИ ОБЪ-ЕКТА РАЗРАБОТКИ К ВВОДУ ПРОДУКТА В ЭКСПЛУАТАЦИЮ
7.1.	 Общие положения
Подготовка объекта разработки осуществляется для обеспечения го-товности продукта к эксплуатации с соблюдением нормативных требований и стандартов ГОСТ 34. Работы выполняются с целью гарантировать коррект-ное функционирование системы, безопасность передачи и хранения данных, а также соответствие технической документации.
7.2.	 Состав работ
•	Техническая подготовка: развертывание и настройка серверного и кли-ентского программного обеспечения. Проведение функционального, инте-грационного и нагрузочного тестирования.
•	Организационно-методические мероприятия: составление эксплуатаци-онной документации (инструкция пользователя, регламент технического обслуживания).
•	Приемо-сдаточные мероприятия: проведение комплексных испытаний системы в условиях, приближенных к реальным. Оформление актов при-емки, подтверждающих соответствие результатов испытаний требованиям технической документации.
8.	ТРЕБОВАНИЯ К ДОКУМЕНТИРОВАНИЮ
Эксплуатационная документация должна включать:
•	Руководство пользователя для веб-интерфейса.
•	Документацию по установке и настройке серверной части.
•	Методические указания по использованию API и интеграции с игровым клиентом.
•	Техническую документацию по разработке (архитектурные диаграммы, описание модулей, алгоритмов и протоколов обмена данными).
•	План тестирования.
•	Разработка тест кейсов.
•	Результаты проведённых тестов.
•	Отчет о результат тестирования.
